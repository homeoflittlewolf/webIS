特性：HTML5 <canvas> 标签用于绘制图像（通过脚本，通常是 JavaScript）。
    不过，<canvas> 元素本身并没有绘制能力（它仅仅是图形的容器） - 您必须使用脚本来完成实际的绘图任务。
    getContext() 方法可返回一个对象，该对象提供了用于在画布上绘图的方法和属性。
    具体各种方法与属性，JS的处理方式类似于JAVA的图形界面。
    这里就不一一介绍了，其中有几个延伸的方法可以说明注意一下，
    save() 	保存当前环境的状态
    restore() 	返回之前保存过的路径状态和属性
    createEvent() 	 
    getContext() 	 
    toDataURL()
安全性：新H5的图形绘制。具有保存作用，绘制状态保存时会被存放在一个后进先出的栈中，回复方法restore()与之对应.
    不过该方法只保存绘制状态的属性值，能否可以保存其中的JS浸入stroage不可知；
    至于toDataURL()方法则会生成一个新的页面链接保存生成的图片，并能够提供一定的下载浏览过程，
    如果能在新连接的图片生成的生成中注入反射型xss的话，将会绕过浏览器的规则过滤（新型标签），实现反射型XSS攻击。
    
